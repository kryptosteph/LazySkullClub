{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["account","contract","ADDRESS","apikey","endpoint","providerOptions","binancechainwallet","package","walletconnect","WalletConnectProvider","options","infuraId","walletlink","WalletLink","appName","rpc","chainId","appLogoUrl","darkMode","web3Modal","Web3Modal","network","theme","cacheProvider","connectwallet","window","ethereum","connect","provider","web3","Web3","send","eth","getAccounts","accounts","document","getElementById","textContent","Contract","ABI","mint1","_mintAmount","Number","methods","cost","call","mintRate","totalAmount","mint","from","value","String","mint2","mint3","mint4","mint5","App","state","balance","nftdata","axios","get","then","outputa","setState","data","console","log","outputb","result","this","className","class","style","fontFamily","type","id","fontSize","href","onClick","color","fontWeight","textShadow","for","padding","ButtonGroup","size","name","boxShadow","Button","defaultValue","display","gridTemplateColumns","columnGap","rowGap","map","src","tokenID","alt","to","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.ac1682ef.chunk.js","sourcesContent":["\nimport './App.css';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLink from \"walletlink\";\n\nimport Web3 from 'web3';\n\nimport { AbiCoder } from 'ethers/lib/utils';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport ABI from './ABI.json';\n\nvar account = null;\nvar contract = null;\nvar vaultcontract = null;\nvar web3 = null;\n\n\nconst ADDRESS = \"0x58a14661e4484eb928d53b1cd1508ee8524d4a98\";\nconst apikey = \"BM3RX2JPQIAY4USBSSS2K4QHJ2WZ44BQBX\";\nconst endpoint = \"https://api-goerli.etherscan.io/api\";\nconst nftpng = \"https://ipfs.io/ipfs/QmXXCuvVxeFePG8RqXR5KXzPVzaD1QZgiPYYkPpp3NE2kf/\";\n\nconst providerOptions = {\n\tbinancechainwallet: {\n\t\tpackage: true\n\t  },\n\twalletconnect: {\n\t\tpackage: WalletConnectProvider,\n\t\toptions: {\n\t\t  infuraId: \"765d4237ce7e4d999f706854d5b66fdc\"\n\t\t}\n\t  },\n\t  walletlink: {\n\t\tpackage: WalletLink, \n\t\toptions: {\n\t\t  appName: \"Net2Dev NFT Minter\", \n\t\t  infuraId: \"765d4237ce7e4d999f706854d5b66fdc\", \n\t\t  rpc: \"\", \n\t\t  chainId: 1, \n\t\t  appLogoUrl: null, \n\t\t  darkMode: true \n\t\t}\n\t  },\n};\n\nconst web3Modal = new Web3Modal({\n  network: \"goerli\",\n  theme: \"dark\",\n  cacheProvider: true,\n  providerOptions \n});\n\nasync function connectwallet() { \n  if (window.ethereum) {\n\t  var provider = await web3Modal.connect();\n      var web3 = new Web3(provider); \n      await window.ethereum.send('eth_requestAccounts'); \n      var accounts = await web3.eth.getAccounts(); \n      account = accounts[0]; \n      document.getElementById('wallet-address').textContent = account; \n      contract = new web3.eth.Contract(ABI, ADDRESS);\n}}\n\nasync function mint1() {\n  if (window.ethereum) {\n        // var _mintAmount = Number(document.querySelector(\"[name=amount]\").value);\n\t\tvar _mintAmount = 1;\n        var mintRate = Number(await contract.methods.cost().call()); \n        var totalAmount = mintRate * _mintAmount; \n      contract.methods.mint(account, _mintAmount).send({ from: account, value: String(totalAmount) }); \n}}\n\nasync function mint2() {\n\tif (window.ethereum) {\n\t\t /* var _mintAmount = Number(document.querySelector(\"[name=amount]\").value); */\n\t\t  var _mintAmount = 2;\n\t\t  var mintRate = Number(await contract.methods.cost().call()); \n\t\t  var totalAmount = mintRate * _mintAmount; \n\t\tcontract.methods.mint(account, _mintAmount).send({ from: account, value: String(totalAmount) }); \n  }}\n\n  async function mint3() {\n\tif (window.ethereum) {\n\t\t /* var _mintAmount = Number(document.querySelector(\"[name=amount]\").value); */\n\t\t  var _mintAmount = 3;\n\t\t  var mintRate = Number(await contract.methods.cost().call()); \n\t\t  var totalAmount = mintRate * _mintAmount; \n\t\tcontract.methods.mint(account, _mintAmount).send({ from: account, value: String(totalAmount) }); \n  }}\n\n  async function mint4() {\n\tif (window.ethereum) {\n\t\t /* var _mintAmount = Number(document.querySelector(\"[name=amount]\").value); */\n\t\t  var _mintAmount = 4;\n\t\t  var mintRate = Number(await contract.methods.cost().call()); \n\t\t  var totalAmount = mintRate * _mintAmount; \n\t\tcontract.methods.mint(account, _mintAmount).send({ from: account, value: String(totalAmount) }); \n  }}\n\n  async function mint5() {\n\tif (window.ethereum) {\n\t\t /* var _mintAmount = Number(document.querySelector(\"[name=amount]\").value); */\n\t\t  var _mintAmount = 5;\n\t\t  var mintRate = Number(await contract.methods.cost().call()); \n\t\t  var totalAmount = mintRate * _mintAmount; \n\t\tcontract.methods.mint(account, _mintAmount).send({ from: account, value: String(totalAmount) }); \n  }}\n  \nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tbalance: [],\n\t\t\tnftdata: [],\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\t\n\t\tawait axios.get((endpoint + `?module=stats&action=tokensupply&contractaddress=${ADDRESS}&apikey=${apikey}`))\n\t\t.then(outputa => {\n            this.setState({\n                balance:outputa.data\n            })\n            console.log(outputa.data)\n        })\n\n\t\tawait axios.get((endpoint + `?module=account&action=tokennfttx&contractaddress=${ADDRESS}&page=1&offset=100&tag=latest&apikey=${apikey}`))\n\t\t.then(outputb => {\n\t\t\tconst { result } = outputb.data\n            this.setState({\n                nftdata:result\n            })\n            console.log(outputb.data)\n        })\n\t}\n  \n  render() {\n\tconst {balance} = this.state;\n\tconst {nftdata} = this.state;\n\n\treturn (\n\t\t<div className=\"App nftapp\">\n\n <nav class=\"navbar navbarfont navbarglow navbar-expand-md navbar-dark bg-dark mb-4\">\n          <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n {/*            <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '25px' }} href=\"#\"></a><img src=\"n2d-logo.png\" width=\"7%\" /> */}\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"25px\" }}>\n\t\t\t  <li class=\"nav-item\">\n                  <a class=\"nav-link active\" aria-current=\"page\" href=\"http://vilesverse.io\">VileSkulls</a>\n                </li>\n\t\t\t\t<li class=\"nav-item\">\n                  <a class=\"nav-link inactive\" aria-current=\"page\" href=\"https://testnets.opensea.io/collection/vileskullsnft-collection-v3\">OpenSea</a>\n                </li>\n\n\n\t\t\t\t\n\n\n\n                \n      {/*           <li class=\"nav-item\">\n                  <a class=\"nav-link\">Bridge NFTs</a>\n                </li> */}\n              </ul>\n            </div>\n          </div>\n          <div className='px-5'>\n            <input id=\"connectbtn\" type=\"button\" className=\"connectbutton\" onClick={connectwallet} style={{ fontFamily: \"SF Pro Display\" }} value=\"Connect Your Wallet\" />\n          </div>\n        </nav>\n\n\n\n\n\n\t <div className='container'>\n\t<div className='row'>\n\t{/*   <form class=\"gradient col-lg-5 mt-5\" style={{borderRadius:\"25px\",boxShadow:\"1px 1px 15px #000000\"}}>\n\t\t<h4 style={{color:\"#FFFFFF\"}}>Mint Portal</h4>\n\t\t<h5 style={{color:\"#FFFFFF\"}}>Please connect your wallet</h5>\n\t\t<Button onClick={connectwallet} style={{marginBottom:\"5px\",color:\"#FFFFFF\"}}>Connect Wallet</Button>\n\t\t<div class=\"card\" id='wallet-address' style={{marginTop:\"3px\",boxShadow:\"1px 1px 4px #000000\"}}>\n\t\t  <label for=\"floatingInput\">Wallet Address</label>\n\t\t  </div>\n\t\t  <div class=\"card\" style={{marginTop:\"3px\",boxShadow:\"1px 1px 4px #000000\"}}>\n\t\t  <input type=\"number\" name=\"amount\" defaultValue=\"1\" min=\"1\" max=\"5\"/>\n\t\t  <label >Please select the amount of NFTs to mint.</label>\n\t\t  <Button onClick={mint}>Buy/Mint!</Button>\n\t\t  </div>\n\t\t<label style={{color:\"#FFFFFF\"}}>Price 0.05 ETH each mint.</label>\n\t\t<h5 style={{color:\"white\", textShadow:\"1px 1px 3px #000000\"}}> Tokens Minted so far= {balance.result}/1000</h5>\n  </form> */}\n  \n  <form>\n            <div className=\"row \">\n              <div>\n                <h1 className=\"pt-2\" style={{color:\"white\",  fontWeight: \"30\" }}>VileSkulls NFT Minter</h1>\t\n              </div>\n              <h5 style={{color:\"white\", textShadow:\"1px 1px 3px #000000\"}}> VileVerse NFTs Minted so far= {balance.result}/1000</h5>\n              \n\t\t\t  <h6 className=\"pt-2\" style={{color:\"white\",  fontWeight: \"20\" }}>Your Wallet Address</h6>\n              <div className=\"pb-3\" id='wallet-address' style={{\n                color: \"#39FF14\",\n                fontWeight: \"400\",\n                textShadow: \"1px 1px 1px black\",\n              }}>\n                <label for=\"floatingInput\">Please Connect Your MetaMask Wallet</label>\n              </div>\n            </div>\n            <div>\n\n\t\t\t<h1 className=\"pt-2\" style={{ padding: \"05px, 2px, 4px, 4px\", color:\"white\", fontWeight: \"300\", fontSize: \"18px\" }}>Select NFT Quantity</h1>\n\n\n              \n            </div>\n           <ButtonGroup size=\"lg\"\n              aria-label=\"First group\"\n              name=\"amount\"\n              style={{ boxShadow: \"1px 1px 5px #000000\" }}\n            >\n              <Button onClick={mint1}  defaultValue=\"1\" value=\"1\">1</Button>\n              <Button onClick={mint2}  defaultValue=\"2\" value=\"1\">2</Button>\n              <Button onClick={mint3}  defaultValue=\"3\" value=\"3\">3</Button>\n              <Button onClick={mint4}  defaultValue=\"4\" value=\"4\">4</Button>\n              <Button onClick={mint5}  defaultValue=\"5\" value=\"5\">5</Button>\n            </ButtonGroup>\n\n\t\t\t{/* <div class=\"card\" style={{marginTop:\"3px\",boxShadow:\"1px 1px 4px #000000\"}}>\n\t\t  <input type=\"number\" name=\"amount\" defaultValue=\"1\" min=\"1\" max=\"5\"/>\n\t\t  <label >Please select the amount of NFTs to mint.</label>\n\t\t  <Button onClick={mint}>Buy/Mint!</Button>\n\t\t  </div> */}\n\n<h5 className=\"pt-2\" style={{ padding: \"2px, 2px, 1px, 1px\", color:\"white\",  fontWeight: \"300\", fontSize: \"18px\" }}>0.05 Ethereum each mint</h5>\n<h5 className=\"pt-2\" style={{ padding: \"2px, 2px, 1px, 1px\", color:\"white\",  fontWeight: \"300\", fontSize: \"18px\" }}>mobile users use browser inside MetaMask </h5>\n          </form>\n\n\n  <div className=\"row items mt-3\">\n  <div className=\"ml-3 mr-3\" style={{display: \"inline-grid\",gridTemplateColumns: \"repeat(4, 5fr)\",columnGap: \"15px\", rowGap: \"15px\"}}>\n  {nftdata.map(result => {\n\t  return (\n\t\t\t<div className=\"card\">\n            \t\t<div className=\"image-over\">\n\t\t\t\t\t<img className=\"card-img-top\" src={nftpng + result.tokenID +'.png'} alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-caption col-12 p-0\">\n                    \t<div className=\"nft-card\">\n\t\t\t\t\t\t\t<h5 className=\"mb-0\">VileSkulls {result.tokenID}</h5>\n\t\t\t\t\t\t\t<h5 className=\"mb-0 mt-2\">Owner Wallet:<p style={{color:\"#39FF14\",fontWeight:\"bold\",textShadow:\"1px 1px 2px #000000\"}}>{result.to}</p></h5>\n                    \t\t<div className=\"card-bottom d-flex justify-content-between\">\n\t\t\t\t\t\t\t{/* <Button className=\"btn btn-bordered-white btn-smaller mt-3\">\n\t\t\t\t\t\t\t\t<i className=\"mr-2\" />Buy Now </Button> */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                </div>\n            </div>\n        );\n    })}\n\t</div>\n</div>\n  </div>\n\t</div>\n \t</div>\n  \t\t\t);\n\t};\n}\n\t\n\texport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}